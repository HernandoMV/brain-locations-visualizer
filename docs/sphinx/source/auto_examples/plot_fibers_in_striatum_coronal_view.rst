
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_fibers_in_striatum_coronal_view.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_fibers_in_striatum_coronal_view.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_fibers_in_striatum_coronal_view.py:


plot_fibers_in_striatum_coronal_view.py
=======================================
generates a coronal view of the striatum with the fiber tips

1. Import required packages
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 9-19

.. code-block:: default


    import pandas as pd
    import numpy as np
    from pathlib import Path
    from PIL import Image
    import urllib.request
    from os.path import exists
    from brain_locations_visualizer import config_parser
    from brain_locations_visualizer.plotting_functions import generate_coronal_figure








.. GENERATED FROM PYTHON SOURCE LINES 20-22

2. Get the configuration file and define variables
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 22-29

.. code-block:: default


    # use the default config file for the documentation
    config_file = Path("config_for_documentation.json")

    # variables are assigned in the config_parser function
    config_parser.config_parser(config_file)








.. GENERATED FROM PYTHON SOURCE LINES 30-32

plot with a different marker the flat fibers and the tapered fibers
(this is specified in the mouse name)

.. GENERATED FROM PYTHON SOURCE LINES 32-35

.. code-block:: default

    ff_marker = "_"
    tf_marker = "|"








.. GENERATED FROM PYTHON SOURCE LINES 36-37

define the output directory as the parent of the config file

.. GENERATED FROM PYTHON SOURCE LINES 37-39

.. code-block:: default

    parent = Path(config_file).parent








.. GENERATED FROM PYTHON SOURCE LINES 40-41

read the file of points

.. GENERATED FROM PYTHON SOURCE LINES 41-47

.. code-block:: default

    coords = pd.read_csv(config_parser.file_path, header=0)
    X = coords.x
    Y = coords.y
    Z = coords.z
    Animal_Name = coords.Mouse_name








.. GENERATED FROM PYTHON SOURCE LINES 48-51

select only the fibers used in the analysis
CAREFUL HERE WITH WHERE IS LEFT AND WHERE IS RIGHT!!
animals that are not included have a # in front of their name

.. GENERATED FROM PYTHON SOURCE LINES 51-57

.. code-block:: default

    animal_mask = [not an.startswith("#") for an in Animal_Name]
    X = np.array(list(X[animal_mask])).astype(float)
    Y = np.array(list(Y[animal_mask])).astype(float)
    Z = np.array(list(Z[animal_mask])).astype(float)
    Animal_Name = np.array(list(Animal_Name[animal_mask]))








.. GENERATED FROM PYTHON SOURCE LINES 58-59

**2.1 This part decides which slices to show**

.. GENERATED FROM PYTHON SOURCE LINES 59-69

.. code-block:: default


    # download the atlas from the server into the data folder
    url = "https://zenodo.org/record/7501966/files/" + config_parser.atlas_path.name
    # download if data is not there
    if not exists(config_parser.atlas_path):
        print('Downloading data...')
        urllib.request.urlretrieve(url, config_parser.atlas_path)
    else:
        print('Data already in directory')





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Data already in directory




.. GENERATED FROM PYTHON SOURCE LINES 70-71

read atlas and get its dimensions

.. GENERATED FROM PYTHON SOURCE LINES 71-77

.. code-block:: default

    atlas = Image.open(config_parser.atlas_path)
    try:
        h, w, _ = np.shape(atlas)
    except Exception:
        h, w = np.shape(atlas)








.. GENERATED FROM PYTHON SOURCE LINES 78-80

show images evenly if the precise slices are not specified
in the config file

.. GENERATED FROM PYTHON SOURCE LINES 80-95

.. code-block:: default

    if config_parser.sl_list == []:
        step = int(
            np.floor(
                (config_parser.z_limits[1] - config_parser.z_limits[0])
                / config_parser.n_images
            )
        )
        sl_list = list(
            range(config_parser.z_limits[0], config_parser.z_limits[1], step)
        )
        sl_list = sl_list[-config_parser.n_images :]

    else:
        sl_list = config_parser.sl_list








.. GENERATED FROM PYTHON SOURCE LINES 96-97

Mirror all to the right hemisphere (optional)

.. GENERATED FROM PYTHON SOURCE LINES 97-103

.. code-block:: default

    atlas_mid_point = w / 2
    for i in range(len(Z)):
        if Z[i] < atlas_mid_point:
            dist_to_center = atlas_mid_point - Z[i]
            Z[i] = atlas_mid_point + dist_to_center








.. GENERATED FROM PYTHON SOURCE LINES 104-105

define masks for the different animals and fiber types

.. GENERATED FROM PYTHON SOURCE LINES 105-114

.. code-block:: default

    mask_1 = [x.startswith(config_parser.id_1) for x in Animal_Name]
    mask_2 = [x.startswith(config_parser.id_2) for x in Animal_Name]
    mask_other = np.logical_and(
        [not e for e in mask_1], [not e for e in mask_2]
    )

    ff_mask = [x.endswith("_flat") for x in Animal_Name]
    tf_mask = [not x for x in ff_mask]








.. GENERATED FROM PYTHON SOURCE LINES 115-117

2. Generate the figure
~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 117-136

.. code-block:: default

    generate_coronal_figure(
        config_parser,
        sl_list,
        w,
        h,
        atlas,
        X,
        Y,
        Z,
        mask_1,
        mask_2,
        mask_other,
        ff_mask,
        tf_mask,
        ff_marker,
        tf_marker,
        parent,
    )




.. image-sg:: /auto_examples/images/sphx_glr_plot_fibers_in_striatum_coronal_view_001.png
   :alt: plot fibers in striatum coronal view
   :srcset: /auto_examples/images/sphx_glr_plot_fibers_in_striatum_coronal_view_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.462 seconds)


.. _sphx_glr_download_auto_examples_plot_fibers_in_striatum_coronal_view.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_fibers_in_striatum_coronal_view.py <plot_fibers_in_striatum_coronal_view.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_fibers_in_striatum_coronal_view.ipynb <plot_fibers_in_striatum_coronal_view.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
